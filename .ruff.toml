# In addition to the standard set of exclusions, omit all tests:
extend-exclude = ["lib/streamlit/proto", "lib/streamlit/emojis.py"]
include = ["lib/**/*.py", "lib/**/*.pyi", "e2e_playwright/**/*.py", "scripts/**/*.py"]
target-version = 'py38'

[lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort - Import sorting
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
    "FA", # Verifies files use from __future__ import annotations if a type is used in the module that can be rewritten using PEP 563.
    "ISC", # Encourage correct string literal concatenation.
    "LOG", # Checks for issues using the standard library logging module.
    "T20", # Check for Print statements in python files.
    "Q", # Linting rules for quites
    "NPY", # Linting rules for numpy
    "RUF100", # Unused noqa directive
    # "G",
    # "S"
    # "CPY"
    # "TCH" TODO: activate and run ruff check lib --unsafe-fixes --fix
    # "SIM"
    # ARG # checks for unused function arguments.
    # "TD" TODO Lint TODO comments in a Python code , also look into FIX
    # "PD", provides opinionated linting for pandas code. TODO run and clean up
    # "PYI", # Investigate
    # "PGH"  -> look into
    # "PL" -> investigate
    # "R" -> investigate
    # "TRY" -> investigate
    # "FLY" -> maybe? better string formatting
    # "PERF" -> performance improvements -> investigate
    # "RUF" -> investigate
    # "C4",  # flake8-comprehensions TODO: activate and run: ruff check lib --unsafe-fixes --fix
]
ignore = [
    "ISC001", # Checks for implicitly concatenated strings on a single line.
    "E501",  # Checks for lines that exceed the specified maximum character length.
    "UP031", # Checks for printf-style string formatting, and offers to replace it with str.format calls.
    "B904", # Checks for raise statements in exception handlers that lack a from clause.
    "B008",  # Checks for function calls in default function arguments.
    "PYI041", # Checks for parameter annotations that contain redundant unions between builtin numeric types (e.g., int | float).
    "PYI051", # Checks for redundant unions between a Literal and a builtin supertype of that Literal.
    "PYI036", # Checks for incorrect function signatures on __exit__ and __aexit__ methods.
]
# Do not lint files in tests and vendor directory:
exclude = ["lib/tests/**", "lib/streamlit/vendor/**", "scripts/**"]

# TODO: Introduce linting for annotations
# [lint.flake8-annotations]
# allow-star-arg-any = true # Surpresses errors for *args and **kwargs parameters
# ignore-fully-untyped = true # Surpresses errors for fully untyped functions
# suppress-none-returning = true
# ignore:     "ANN101",
# select:     "ANN",

[lint.per-file-ignores]
"lib/streamlit/__init__.py" = ["E402"]
"e2e_playwright/**" = ["NPY", "B", "T20"]

[lint.isort]
known-first-party = ["streamlit", "shared"]
